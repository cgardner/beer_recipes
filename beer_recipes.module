<?php

/**
 * @file
 * beer_recipes.module - share beer recipes (based on recipe.module)
 */
define('BEER_RECIPE_CACHE_KEY', 'beer_recipes_markup_%s');

/**
 * Implementation of hook_form_beer_recipe_node_form_alter
 **/
function beer_recipes_form_beer_recipe_node_form_alter(&$form, &$form_state) 
{
	$form['title']['#required'] = FALSE;
	$form['title']['#type'] = 'hidden';
} // end function beer_recipe_form

/**
 * Implementation of hook_entity_presave
 **/
function beer_recipes_entity_presave($entity, $type) 
{
	if ($type == 'node' && $entity->type == 'beer_recipe') {
		$file = file_load($entity->field_beer_recipe_beerxml['und'][0]['fid']);
		$dom = new DOMDocument();
		$dom->load($file->uri);
		
		$xpath = new DOMXpath($dom);
		$name = $xpath->query('//RECIPE/NAME')->item(0)->nodeValue;
		$brewer = $xpath->query('//RECIPE/BREWER')->item(0)->nodeValue;
		$entity->title = sprintf('%s by %s', $name, $brewer);


		if (count($entity->field_beer_recipe_style['und']) == 0) {
			$style = $xpath->query('//STYLE/CATEGORY_NUMBER');
			if (count($style) > 0) {
				$categoryNumber = $style->item(0)->nodeValue;
				$styleLetter = $xpath->query('//STYLE/STYLE_LETTER')->item(0)->nodeValue;
				$styleCategory = sprintf('%s%s', $categoryNumber, $styleLetter);
				$term = taxonomy_get_term_by_name($styleCategory);
				if (count($term) == 0) {
					$term = new stdClass();
					$term->name = sprintf('%s - %s %s', $styleCategory, $xpath->query('//STYLE/CATEGORY')->item(0)->nodeValue, $xpath->query('//STYLE/NAME')->item(0)->nodeValue);
					$vocabularies = taxonomy_get_vocabularies();
					reset($vocabularies);
					$vid = FALSE;
					while ($vid == FALSE && list(, $vocab) = each($vocabularies)) {
						if ($vocab->machine_name == 'beer_style') {
							$vid = $vocab->vid;
						}
					}

					$term->vid = $vid;
					taxonomy_term_save($term);
				}

				$entity->field_beer_recipe_style['und'][0] = array(
					'tid' => $term->tid,
				);
			}
		}

		cache_clear_all(sprintf(BEER_RECIPE_CACHE_KEY, $entity->nid), 'cache');
	}
} // end function beer_recipe_node_presave

/**
 * Implementation of hook_node_view
 **/
function beer_recipes_node_view($node, $view_mode, $langcode) 
{
	if ($node->type == 'beer_recipe') {
		drupal_add_css(drupal_get_path('module', 'beer_recipes') .'/beer_recipes.css');
		$cache_key = sprintf(BEER_RECIPE_CACHE_KEY, $node->nid);
		// Get the markup from cache if it's available
		if (($markup_cache = cache_get($cache_key)) === FALSE) {
			$doc = new DOMDocument();
			$doc->load($node->field_beer_recipe_beerxml['und'][0]['uri']);

			$styleDoc = new DOMDocument();
			$styleDoc->load(dirname(__FILE__) .'/beer_recipes.xsl');

			$xsl = new XSLTProcessor();
			$xsl->importStylesheet($styleDoc);

			$recipe_markup = $xsl->transformToXML($doc);
			cache_set($cache_key, $recipe_markup);
		}
		else {
			$recipe_markup = $markup_cache->data;
		}

		$node->content['beer_recipe_markup'] = array(
			'#markup' => $recipe_markup,
			'#weight' => 0,
		);
	
	}
} // end function beer_recipe_view

// vim: ft=php tabstop=2 shiftwidth=2
